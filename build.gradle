apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'

version='1.0-rc4'
group = 'gradle_cobertura'

configurations {
    source {
        extendsFrom archives
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile 'net.sourceforge.cobertura:cobertura:1.9.4.1'
    groovy 'org.codehaus.groovy:groovy:1.7.3'
    testCompile 'junit:junit:3.8.2'
    testCompile group: 'org.testng', name: 'testng', version: '5.8', classifier: 'jdk15'
}

project.tasks['test'].configure {
    includes = [ '**/*Test.class' ]
    useTestNG()
}
project.tasks['uploadArchives'].dependsOn 'test'

task jarSrc(type: Jar) {
    classifier = 'src'
    baseName = "${project.name}-src"
    from sourceSets.main.java.srcDirs
    from sourceSets.main.groovy.srcDirs
}

artifacts {
    archives jarSrc
}

uploadArchives {
    uploadDescriptor = true
    repositories {
        add (new org.apache.ivy.plugins.resolver.FileSystemResolver()) {
            name = 'localIvyRepository'
            addArtifactPattern "${projectDir}/repo/[organisation]/[module]/[revision]/[artifact]-[revision](.[ext])"
            addIvyPattern "${projectDir}/repo/[organisation]/[module]/[revision]/ivy.xml"
        }
        mavenDeployer {
          repository(url: "file://${projectDir}/repo")
        }
    }
    // this is hacky, but Gradle doesn't yet provide a way to publish non-archive objects
    doLast {
        copy {
            from "${projectDir}/src/coberturainit"
            into "${projectDir}/repo/gradle_cobertura/gradle_cobertura/${version}/"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9.2'
}

